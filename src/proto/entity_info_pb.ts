// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file src/proto/entity_info.proto (syntax proto2)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto2 } from "@bufbuild/protobuf";

/**
 * @generated from message EntityInfo
 */
export class EntityInfo extends Message<EntityInfo> {
  /**
   * The entity id.
   *
   * @generated from field: optional string entity_id = 1;
   */
  entityId?: string;

  /**
   * The suggestion second line (subtitle).
   * For some clients (e.g. desktop) this is used as the part which is to the
   * right of the emdash.
   *
   * @generated from field: optional string annotation = 2;
   */
  annotation?: string;

  /**
   * Image Url.
   * Will replace the suggestion icon
   *
   * @generated from field: optional string image_url = 6;
   */
  imageUrl?: string;

  /**
   * Will replace the original suggestion as the text on the suggestion's 1st
   * line (title).
   *
   * @generated from field: optional string name = 7;
   */
  name?: string;

  /**
   * Dominant color.
   * Affects how image is rendered.
   *
   * @generated from field: optional string dominant_color = 9;
   */
  dominantColor?: string;

  /**
   * Encoding of how search behavior should be modified when clicking the entity
   * suggestion (gs_ssp).
   *
   * @generated from field: optional string suggest_search_parameters = 10;
   */
  suggestSearchParameters?: string;

  /**
   * List of possible actions for this entity.
   *
   * @generated from field: repeated ActionInfo action_suggestions = 12;
   */
  actionSuggestions: ActionInfo[] = [];

  /**
   * List of categories this entity belongs to.
   *
   * @generated from field: repeated CategoryInfo.Category category = 14;
   */
  category: CategoryInfo_Category[] = [];

  /**
   * The entity's official website uri.
   *
   * @generated from field: optional string website_uri = 17;
   */
  websiteUri?: string;

  constructor(data?: PartialMessage<EntityInfo>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "EntityInfo";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "entity_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "annotation", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "image_url", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 9, name: "dominant_color", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 10, name: "suggest_search_parameters", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 12, name: "action_suggestions", kind: "message", T: ActionInfo, repeated: true },
    { no: 14, name: "category", kind: "enum", T: proto2.getEnumType(CategoryInfo_Category), repeated: true },
    { no: 17, name: "website_uri", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EntityInfo {
    return new EntityInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EntityInfo {
    return new EntityInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EntityInfo {
    return new EntityInfo().fromJsonString(jsonString, options);
  }

  static equals(a: EntityInfo | PlainMessage<EntityInfo> | undefined, b: EntityInfo | PlainMessage<EntityInfo> | undefined): boolean {
    return proto2.util.equals(EntityInfo, a, b);
  }
}

/**
 * Entity Suggestion Action descriptor.
 *
 * @generated from message ActionInfo
 */
export class ActionInfo extends Message<ActionInfo> {
  /**
   * The URI to open when the action is invoked.
   *
   * @generated from field: optional string action_uri = 3;
   */
  actionUri?: string;

  /**
   * Action type.
   *
   * @generated from field: optional ActionInfo.ActionType action_type = 8;
   */
  actionType?: ActionInfo_ActionType;

  /**
   * If non-empty, the action must result in navigation to the SRP accompanied
   * with these additional request parameters to help force a certain SRP.
   *
   * @generated from field: map<string, string> search_parameters = 9;
   */
  searchParameters: { [key: string]: string } = {};

  constructor(data?: PartialMessage<ActionInfo>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "ActionInfo";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 3, name: "action_uri", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "action_type", kind: "enum", T: proto2.getEnumType(ActionInfo_ActionType), opt: true },
    { no: 9, name: "search_parameters", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActionInfo {
    return new ActionInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActionInfo {
    return new ActionInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActionInfo {
    return new ActionInfo().fromJsonString(jsonString, options);
  }

  static equals(a: ActionInfo | PlainMessage<ActionInfo> | undefined, b: ActionInfo | PlainMessage<ActionInfo> | undefined): boolean {
    return proto2.util.equals(ActionInfo, a, b);
  }
}

/**
 * @generated from enum ActionInfo.ActionType
 */
export enum ActionInfo_ActionType {
  /**
   * @generated from enum value: DIRECTIONS = 2;
   */
  DIRECTIONS = 2,

  /**
   * @generated from enum value: CALL = 3;
   */
  CALL = 3,

  /**
   * @generated from enum value: REVIEWS = 20;
   */
  REVIEWS = 20,
}
// Retrieve enum metadata with: proto2.getEnumType(ActionInfo_ActionType)
proto2.util.setEnumType(ActionInfo_ActionType, "ActionInfo.ActionType", [
  { no: 2, name: "DIRECTIONS" },
  { no: 3, name: "CALL" },
  { no: 20, name: "REVIEWS" },
]);

/**
 * Entity Suggestion Category info.
 *
 * @generated from message CategoryInfo
 */
export class CategoryInfo extends Message<CategoryInfo> {
  constructor(data?: PartialMessage<CategoryInfo>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CategoryInfo";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CategoryInfo {
    return new CategoryInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CategoryInfo {
    return new CategoryInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CategoryInfo {
    return new CategoryInfo().fromJsonString(jsonString, options);
  }

  static equals(a: CategoryInfo | PlainMessage<CategoryInfo> | undefined, b: CategoryInfo | PlainMessage<CategoryInfo> | undefined): boolean {
    return proto2.util.equals(CategoryInfo, a, b);
  }
}

/**
 * @generated from enum CategoryInfo.Category
 */
export enum CategoryInfo_Category {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: MUSIC = 2;
   */
  MUSIC = 2,

  /**
   * @generated from enum value: GAMES = 4;
   */
  GAMES = 4,

  /**
   * @generated from enum value: PEOPLE = 6;
   */
  PEOPLE = 6,

  /**
   * @generated from enum value: SPORTS = 7;
   */
  SPORTS = 7,

  /**
   * @generated from enum value: BOOKS = 9;
   */
  BOOKS = 9,

  /**
   * @generated from enum value: GEO = 12;
   */
  GEO = 12,

  /**
   * @generated from enum value: NATURAL_WORLD = 13;
   */
  NATURAL_WORLD = 13,

  /**
   * @generated from enum value: FOOD = 15;
   */
  FOOD = 15,

  /**
   * @generated from enum value: PRODUCTS = 16;
   */
  PRODUCTS = 16,

  /**
   * @generated from enum value: UNIVERSITIES = 17;
   */
  UNIVERSITIES = 17,

  /**
   * @generated from enum value: CARS_US = 18;
   */
  CARS_US = 18,

  /**
   * @generated from enum value: TV = 19;
   */
  TV = 19,

  /**
   * @generated from enum value: MOVIES = 20;
   */
  MOVIES = 20,

  /**
   * @generated from enum value: CARS_MODEL_US = 21;
   */
  CARS_MODEL_US = 21,

  /**
   * @generated from enum value: LOCAL_POIS_AND_CHAINS = 22;
   */
  LOCAL_POIS_AND_CHAINS = 22,

  /**
   * @generated from enum value: COMPANIES = 23;
   */
  COMPANIES = 23,

  /**
   * @generated from enum value: PRODUCT_LINES = 24;
   */
  PRODUCT_LINES = 24,

  /**
   * @generated from enum value: LOCAL_POI = 25;
   */
  LOCAL_POI = 25,

  /**
   * @generated from enum value: LOCALITY = 26;
   */
  LOCALITY = 26,
}
// Retrieve enum metadata with: proto2.getEnumType(CategoryInfo_Category)
proto2.util.setEnumType(CategoryInfo_Category, "CategoryInfo.Category", [
  { no: 0, name: "UNKNOWN" },
  { no: 2, name: "MUSIC" },
  { no: 4, name: "GAMES" },
  { no: 6, name: "PEOPLE" },
  { no: 7, name: "SPORTS" },
  { no: 9, name: "BOOKS" },
  { no: 12, name: "GEO" },
  { no: 13, name: "NATURAL_WORLD" },
  { no: 15, name: "FOOD" },
  { no: 16, name: "PRODUCTS" },
  { no: 17, name: "UNIVERSITIES" },
  { no: 18, name: "CARS_US" },
  { no: 19, name: "TV" },
  { no: 20, name: "MOVIES" },
  { no: 21, name: "CARS_MODEL_US" },
  { no: 22, name: "LOCAL_POIS_AND_CHAINS" },
  { no: 23, name: "COMPANIES" },
  { no: 24, name: "PRODUCT_LINES" },
  { no: 25, name: "LOCAL_POI" },
  { no: 26, name: "LOCALITY" },
]);

